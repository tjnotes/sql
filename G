Certainly! Let's break down the process described into simpler steps to make it easier to explain to a junior developer. The flow involves multiple systems, databases, and services, so I'll outline each step clearly:Starting Point - ProcessPMSRequest Function:The process begins with a call to Sft.ProcessPMSRequest from the Sft system. This function is responsible for initiating the request processing.Writing to dbo.Pbd Event Table:The ProcessPMSRequest function writes an entry to the dbo.Pbd Event table in a database.Database Trigger - Calling USP SQL RW PMS CreateRequest:There's a trigger set on the dbo.Pbd Event table. When a new entry is made (from the previous step), this trigger activates.The trigger calls the stored procedure [USP SQL RW PMS CreateRequest].This stored procedure processes the event and then marks it as complete, preventing it from being processed by BizTalk.Writing to Audit and Event Tables:The [USP SQL RW PMS CreateRequest] procedure writes information to two tables: PMS Audit and PMS Events.PMSInvoker Scheduled Task:On the server vsins-PMS-c, there's a scheduled task running PMSInvoker.exe every 2 minutes.PMSInvoker Calling SchedulerInvoke:PMSInvoker makes a call to the SchedulerInvoke method at the endpoint http://localhost:13300/PMSIFSvc.svc/PMSIFSvc.svc.This service is hosted from the directory C:\PMSIFSvc, sourced from H:\SDM_Services\PMS\PMSInterface\PMSInterface.SchedulerInvoke and Database Query:SchedulerInvoke calls the stored procedure USP SQL RO PMS GetAllPending which retrieves all pending requests.Processing Each Retrieved Request:For each pending request, if the system is not in test mode, it submits a matching request to http://PMSweb/PMS/WebService/WebService.asmx.Handling the Response:Responses are handled through a callback service.Depending on the configuration, this service attempts to send a message directly to DMI.If the callback fails or is turned off, the procedure USP SQL RW PMS CreateResponseEvent is called.Writing to Pbd Event and Final Processing:USP SQL RW PMS CreateResponseEvent writes back to the Pbd Event table.This entry is likely processed and submitted to DMI using standard Publish-Subscribe (PubSub) mechanisms.In summary, this flow describes a series of automated steps involving database triggers, stored procedures, web services, and scheduled tasks to process and handle requests in a specific system architecture. Each step is crucial for the seamless operation of the system and for ensuring that all requests are handled and audited correctly.
